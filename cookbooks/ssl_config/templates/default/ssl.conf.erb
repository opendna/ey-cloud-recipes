server {
  listen <%= @https_bind_port %>;

  <% if @server_names and !@server_names.empty? %>
  <%= "server_name #{@server_names.join(" ")};" %>
  <% else %>
  server_name _;
  <% end %>

  ssl on;
  ssl_certificate /data/nginx/ssl/<%= @app_name %>.crt;
  ssl_certificate_key /data/nginx/ssl/<%= @app_name %>.key;
  ssl_prefer_server_ciphers on;
  ssl_protocols  SSLv3 TLSv1;
  ssl_ciphers ECDHE-RSA-AES256-SHA384:AES256-SHA256:RC4:HIGH:!MD5:!aNULL:!EDH:!AESGCM;
  
  client_max_body_size 100M;
  
  root /data/<%= @app_name %>/current/public;
  
  access_log /var/log/engineyard/nginx/<%= @app_name %>.ssl.access.log main;
  error_log /var/log/engineyard/nginx/<%= @app_name %>.ssl.error.log notice;

  location ~ ^/(images|assets|javascripts|stylesheets)/ {
    expires 10y;
    try_files  $uri $uri/index.html /last_assets/$uri /last_assets/$uri.html @app_<%= @app_name %>ssl;
  }

  error_page 404 /404.html;
  error_page 500 502 504 /500.html;
  error_page 503 @503;
  recursive_error_pages on;
  location @503 {

    error_page 405 = /system/maintenance.html;

    if (-f $request_filename) {
      break;
    }

    rewrite ^(.*)$ /system/maintenance.html break;
  }

  location @app_<%= @app_name %>ssl {

    passenger_enabled on;

    passenger_set_cgi_param HTTP_X_FORWARDED_FOR   $proxy_add_x_forwarded_for;
    passenger_set_cgi_param HTTP_X_REAL_IP         $remote_addr;
    passenger_set_cgi_param HTTP_HOST              $http_host;
    passenger_set_cgi_param HTTP_X_FORWARDED_PROTO $scheme;
    passenger_set_cgi_param HTTP_X_REQUEST_START   't=$start_time';
    passenger_set_cgi_param HTTP_X_QUEUE_START     't=$start_time';

    passenger_set_cgi_param SERVER_PORT            443;

    rack_env <%= @node[:environment][:framework_env] %>;

    passenger_min_instances 2;
  }

  location / {
  limit_req zone=limit_req_by_ip burst=20 nodelay;
  if (-f $document_root/system/maintenance.html) { return 503; }
    try_files  $uri $uri/index.html $uri.html @app_<%= @app_name %>ssl;
  }
  include /etc/nginx/servers/<%= @app_name %>/custom.ssl.conf;
}
